library(dplyr)
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
install.packages("dplyr")
library(dplyr)
library(filter)
install.packages("nycflights13")
library(nycflights13)
dim(flights)
head(flights)
flight$time_hour
flights$time_hour
head(flights$time_hour)
filter(flights, month == 1, day == 1)
?filter
library(dplyr)
flights %>% filter(month == 1, day == 1) %>% ggplot(mapping = aes(x=carrier)) + geom_bar()
library(ggplot2)
flights %>% filter(month == 1, day == 1) %>% ggplot(mapping = aes(x=carrier)) + geom_bar()
head(flights)
flights$distance %>% mean()
asdasd
df <- tibble(x = c(1,2,3, NA), y = c(5,6,7,NA))
df %>% arrange(x)
df <- tibble(x = c(1,2,3, NA, NA), y = c(5,6,7,8,9))
df %>% arrange(x)
df %>% arrange(desc(x)
)
diamonds
diamonds %>% select(carat,price)
diamonds %>% select(price,carat)
save.image()
btcdata <- read.csv('https://raw.githubusercontent.com/minihat/Crypto-trade-bot/master/BTC_price_history.csv")
)
''
'
btcdata <- read.csv("https://raw.githubusercontent.com/minihat/Crypto-trade-bot/master/BTC_price_history.csv")
btcdatasmall <- btcdata(1:10)
install.packages("crypto")
library(crypto)
crypto2xts(df, seconds)
crypto2xts(df, second)
crypto2xts(df, sec)
crypto_xts(df, sec)
crypto_xts(df, 'min')
crypto_xts(df, 'minute')
crypto_xts(df, "minute")
crypto2xts(df, "minute")
crypto_xts(df, "minute")
getCoins()
df <- getCoins()
df
df <- crypto_history()
crypto_xts(df, 'sec')
date <- getCoins()
date <- crypto_history()
library(tibble)
library(tidyverse)
date <- crypto_history()
crypto_xts(df, 'sec')
crypto_xts(date, 'sec')
date
head(date)
as.xts(date)
str(date)
View(date)
ETHdata <- filter(date,symbol = "ETH")
ETHdata <- filter(date,symbol == "ETH")
View(ETHdata)
ggplot(data=ETHdata, mapping = aes(x = date,y = open)) + geom_point()
ggplot(data=ETHdata, mapping = aes(x = date,y = open)) + geom_line()
ggplot(data=ETHdata, mapping = aes(x = date,y = open)) + geom_density()
ggplot(data=ETHdata, mapping = aes(x = date,y = open)) + geom_point()
ggplot(data=ETHdata, mapping = aes(x = date,y = open)) + geom_hist()
ggplot(data=ETHdata, mapping = aes(x = date,y = open)) + geom_area()
ggplot(data=ETHdata, mapping = aes(x = date(:),y = open)) + geom_area()
ggplot(data=ETHdata, mapping = aes(x = date,y = open)) + geom_area()
prices <- getPrices()
prices <- crypto_prices()
prices
head(prices)
ETHprice <- filter(prices,symbol == "ETH")
ETHprice
View(ETHprice)
ETHprice <- crypto_prices(coin = "Ethereum")
?select
?mutate
?filter
?summarise
?arrange
arrange(date, slug)
arrange(ETHprice, open)
?arrange
arrange(df, x)
arrange(df,y)
arrange(df,desc(y)
)
arrange(ETHprice, open)
arrange(ETHprice, high)
ETHprice
arrange(date, open)
head(arrange(date,open))
temp <- filter(date, open > 20)
temp <- filter(date, open > .20)
temp <- filter(date, open > 20)
temp <- filter(date, open > .20)
temp <- filter(date, open > 2000)
temp <- filter(date, open > 20000)
temp
rm(btcdata,prices)
rm(temp,df)
ETHdata
head(ETHprice)
head(ETHdata)
arrange(data,date)
arrange(data,"date")
getwd()
setwd("~/GitHub/DataScience")
as.matrix(c(1,2,3,4))
as.matrix(c(1,2,3,4),2,2)
as.matrix(2,2c(1,2,3,4))
as.matrix(2,2,c(1,2,3,4))
as.matrix(c(1,2,3,4))
as.matrix(c(1,2,3,4),c(5,6,7,8))
?as.matrix
as.matrix(c(1,2,3,4),nrow = 2
)
as.matrix(c(1,2,3,4),nrow = 2,ncol = 2)
as.matrix(c(1,2,3,4),nrow = 2,ncol = 2,byrow = false)
matrix(c(1,2,3,4),nrow = 2)
my_matrix <- matrix(c(1,2,3,4,5,6,7,8,9,10,11,12),byrow = TRUE, nrow = 3)
my_matrix
matrix(c(1,2,3,4,5,6,7,8,9,10,11,12),byrow = FALSE, nrow = 3)
matrix(c(1,2,3,4,5,6,7,8,9,10,11,12),byrow = TRUE, nrow = 3)
matrix(c(1,2,3,4,5,6,7,8,9,10,11,12),byrow = TRUE, nrow = 4)
as.data.frame(my_matrix)
?as.data.frame
my_matrix <- matrix(c(1,2,3,4,5,6,7,8,9,10,11,12),byrow = FALSE, nrow = 3)
my_matrix2 <- matrix(c(1,2,3,4,5,6,7,8,9,10,11,12),byrow = TRUE, nrow = 4)
colnames <- c("one","two","three")
as.data.frame(my_matrix2,col.names = colnames)
as.data.frame(my_matrix2,col.names = colnames)
my_dataframe <- as.data.frame(my_matrix2,col.names = colnames)
my_dataframe
colname
colnames
my_dataframe <- as.data.frame(my_matrix2,row.names = colnames)
my_dataframe
diamonds
ggplot(data = diamonds, mapping = aes(x = cuts)) + geom_bar()
ggplot(data = diamonds, mapping = aes(x = cut)) + geom_bar()
ggplot(data = diamonds) + geom_bar(mapping = aes(x = cut))
ggplot(data = diamonds) + geom_bar(mapping = aes(x = clarity))
ggplot(data = diamonds) + geom_hist(mapping = aes(x = depth))
ggplot(data = diamonds) + geom_histogram(mapping = aes(x = depth))
ggplot(data = diamonds) + geom_histogram(mapping = aes(x = depth),binwidth = 10)
ggplot(data = diamonds) + geom_histogram(mapping = aes(x = depth),binwidth = 1)
ggplot(data = diamonds) + geom_histogram(mapping = aes(x = depth),binwidth = .5)
?geom_histogram
ggplot(data = diamonds) + geom_histogram(mapping = aes(x = depth),binwidth = .5,xmin = 50)
ggplot(data = diamonds) + geom_histogram(mapping = aes(x = depth),binwidth = .5,xlim = (50,75))
ggplot(data = diamonds) + geom_histogram(mapping = aes(x = depth),binwidth = .5,xlim(50,75))
ggplot(data = diamonds) + geom_histogram(mapping = aes(x = depth),binwidth = .5,xlim = 50)
ggplot(data = diamonds) + geom_histogram(mapping = aes(x = depth),binwidth = .5) + xlim(50,75)
#Question 6b
ggplot(data = diamonds) + geom_histogram(mapping = aes(x = depth),binwidth = .5) + xlim(55,70)
ggplot(data = diamonds) + geom_histogram(mapping = aes(x = depth),binwidth = .5) + xlim(50,70)
ggplot(data = diamonds) + geom_histogram(mapping = aes(x = depth),binwidth = .5) + xlim(50,75)
#Question 6b
ggplot(data = diamonds) + geom_histogram(mapping = aes(x = depth),binwidth = .5)
rm(colnames,my_dataframe,my_matrix,my_matrix2)
head(ETHdata)
head(ETHdata)
head(ETHdata)
head(ETHdata)
head(ETHdata)
?mutate
?remove
rm(ETHdata$slug)
Ethdata$slug <- NULL
ETHdata$slug <- NULL
Ethdata
ETHdata
head(ETHdata)
ETHdata$symbol,ETHdata$name <- NULL
ETHdata$symbol <- NULL
ETHdata$name <- NULL
head(ETHdata)
ETHdaa$ranknow <- NULL
ETHdata$ranknow <- NULL
ETHdata
head(ETHdata)
?crypto_prices
by_continent <- group_by(gapminder,continent)
library(gapminder)
by_continent <- group_by(gapminder,continent)
by_continent
head(by_continent)
summarise(gapminder, mean_le - mean(lifeExp))
summarise(gapminder, mean_le = mean(lifeExp))
summarise(by_continent, mean_le - mean(lifeExp))
summarise(by_continent, mean_le = mean(lifeExp))
gapminder2 <- gapminder
head(gapminder)
head(by_continent)
?setwd
list.files
list.files()
dir.create("BitCoinProject")
setwd("~/GitHub/DataScience/BitCoinProject")
library(tidyverse)
library(fastR2)
library(tidyverse)
library(fastR2)
install.packages("fastR2")
library(tidyverse)
library(fastR2)
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut))
url <- "https://raw.githubusercontent.com/jmgraham30/UoSDataSci/master/code/baseballSalaries/Data/Salaries.csv"
bbs_df <- read.csv(url)
head(bbs_df)
ggplot(data = bbs_df) +
geom_bar(mapping = aes(x = lgID))
diamonds %>%
count(cut)
diamonds %>% group_by(cut) %>% summarise(n=n())
diamonds %>% count(cut,color)
ggplot(data = diamonds) +
geom_histogram(mapping = aes(x = carat), binwidth = 0.5)
diamonds %>%
count(cut_width(carat, 0.5))
bbs_df %>% ggplot() + geom_histogram(mapping = aes(x=salary))
bbs_df %>% count(cut(salary,c(-1,10000,50000,100000,500000,1000000,5000000,10000000,500000000,100000000) ))
salary_bin <- bbs_df %>%
count(cut(salary,c(-1,10000,50000,100000,500000,1000000,5000000,10000000,500000000,100000000) ))
names(salary_bin) <- c("bin_interval","count_value")
salary_bin %>% ggplot() + geom_bar(mapping = aes(x=bin_interval,y=count_value),stat="identity") +
coord_flip()
bbs_df %>% ggplot() + geom_histogram(mapping = aes(x=log10(salary)))
bbs_df %>% filter(salary > 0) %>% ggplot() + geom_histogram(mapping = aes(x=log10(salary)),bins=100)
ggplot(data = diamonds, mapping = aes(x = carat, colour = cut)) +
geom_freqpoly(binwidth = 0.1)
bbs_df %>% filter(salary > 0) %>% ggplot(mapping = aes(x = log(salary), colour = teamID)) +
geom_freqpoly(binwidth = 0.1)
bbs_df %>% filter(salary > 0, lgID == "AL") %>% ggplot(mapping = aes(x = log(salary), colour = teamID)) +
geom_freqpoly(binwidth = 0.1)
bbs_df %>% filter(salary > 0, lgID == "NL") %>% ggplot(mapping = aes(x = log(salary), colour = teamID)) +
geom_freqpoly(binwidth = 0.1)
?n
?count
add_tally(diamonds,cut)
add_tally(diamonds,color)
add_count(diamonds,color)
head(add_count(diamonds,color))
head(arrange(diamonds,carat))
bbs_df %>% ggplot() + geom_histogram(mapping = aes(x=salary)) +scale_y_log10()
bbs_df %>% ggplot() + geom_histogram(mapping = aes(x=salary))
bbs_df %>% ggplot() + geom_histogram(mapping = aes(x=salary)) +scale_y_log10()
bbs_df %>% filter(salary > 0, lgID == "NL") %>% ggplot(mapping = aes(x = log(salary), colour = teamID)) +
geom_freqpoly(binwidth = 0.1)
bbs_df %>% filter(salary > 0, lgID == "NL") %>% ggplot(mapping = aes(x = log(salary), colour = teamID)) +
geom_freqpoly(binwidth = 0.1)
bbs_df %>% filter(salary > 0, lgID == "NL") %>% ggplot(mapping = aes(x = log(salary), colour = teamID)) +
geom_freqpoly(binwidth = 0.1)
install.packages("qqplotR")
install.packages("qqplotr")
temp <- data.frame(height = rnorm(500,mean = 66,6))
ggplot(data = df) + geom_histogram(x = height)
ggplot(data = temp) + geom_histogram(x = height)
View(temp)
ggplot(data = temp) + geom_histogram(x = temp$height)
ggplot(data = temp) + geom_histogram(mapping = aes(x = temp$height))
ggplot(data = temp) + geom_histogram(mapping = aes(x = temp$height), binwidth = .1)
ggplot(data = temp) + geom_histogram(mapping = aes(x = temp$height), binwidth = 1)
ggplot(data = temp) + geom_histogram(mapping = aes(x = height), binwidth = 1)
library(tidyverse)
library(dplyr)
salaries <- read.csv("Salaries.csv")
url
if(read.csv("Salaries.csv"))
salaries <- read.csv("Salaries.csv")
if(read.csv("Salaries.csv"))
{salaries <- read.csv("Salaries.csv")}
if(read.csv("Salaries.csv") == TRUE)
{salaries <- read.csv("Salaries.csv")}
else
if(read.csv("Salaries.csv") == TRUE)
{
salaries <- read.csv("Salaries.csv")
}
else
if(read.csv("Salaries.csv") == TRUE)
{
salaries <- read.csv("Salaries.csv")
}else{
url <- "https://raw.githubusercontent.com/jmgraham30/UoSDataSci/master/code/baseballSalaries/Data/Salaries.csv"
salaries <- read.csv(url)
}
if(read.csv("Salaries.csv") == TRUE)
{
salaries <- read.csv("Salaries.csv")
}else{
url <- "https://raw.githubusercontent.com/jmgraham30/UoSDataSci/master/code/baseballSalaries/Data/Salaries.csv"
salaries <- read.csv(url)
}
read.csv("Salaries.csv") == TRUE
read.csv("Salaries.csv"
)
if(isTRUE(file.exists("Salaries.csv")
{
if(isTRUE(file.exists("Salaries.csv"))
{
if(isTRUE(file.exists("Salaries.csv")))
{
salaries <- read.csv("Salaries.csv")
}else{
url <- "https://raw.githubusercontent.com/jmgraham30/UoSDataSci/master/code/baseballSalaries/Data/Salaries.csv"
salaries <- read.csv(url)
}
?top_in
?dplyr::top_n
?group_by
library(gapminder)
install.packages("qqplotr")
library(qqplotr)
ggplot(data = gapminder, mapping = aes(sample,gpdPercap)) + stat_qq_band() + stat_qq_line()
ggplot(data = gapminder, mapping = aes(sample,gpdPerCap)) + stat_qq_band() + stat_qq_line()
ggplot(data = gapminder, mapping = aes(sample = gpdPerCap)) + stat_qq_band() + stat_qq_line()
ggplot(data = gapminder, mapping = aes(sample = gpdPercap)) + stat_qq_band() + stat_qq_line()
ggplot(data = gapminder, mapping = aes(sample = gdpPercap)) + stat_qq_band() + stat_qq_line()
ggplot(data = gapminder, mapping = aes(sample = gdpPercap)) + stat_qq_band() + stat_qq_line() + stat_qq_point()
ggplot(data = gapminder) + geom_histogram(mapping = aes(y = gpdPercap))
ggplot(data = gapminder) + geom_histogram(mapping = aes(y = gdpPercap))
ggplot(data = gapminder) + geom_histogram(mapping = aes(x = gdpPercap))
?ifelse
salaries1 <- mutate(salaries, salary = ifelse(salary > 11000))
salaries1 <- mutate(salaries, salary = ifelse(salary > 11000,salary))
salaries1 <- mutate(salaries, salary = ifelse(salary > 11000,NA,salary))
head(arrange(desc(salaries$salary)))
head(arrange(desc(salaries,salary)))
head(arrange(desc(salaries)))
?arrange
head(arrange(salary,desc(salaries)))
head(arrange(salaries1,desc(salaries)))
head(arrange(salaries,desc(salaries)))
ungroup(salaries1)
head(arrange(salaries,desc(salaries)))
head(salaries)
head(salaries1)
salaries1 <- mutate(salaries, salary = ifelse(salary < 11000,NA,salary))
head(salaries1)
head(filter(salaries1,is.na(salary)))
filter(salaries1,!complete.cases(salaries1))
filter(salaries1,!complete.cases(salaries1$salary))
filter(salaries1,!complete.cases(salaries1$teamID))
install.packages("ggformula")
df <- c("hola","bye")
df <- names("hello","goodbye")
df
names(df,"hello","goodbye")
df <- names(c("hello","goodbye"))
df
df <- c("hola","bye")
df
names(df) <- c("hello","goodbye")
df
df2 <- c("1","2")
names(df2) <- c("hello","goodbye")
rbind(df,df2)
df3 <- rbind(df,df2)
rbind(df3,df3)
