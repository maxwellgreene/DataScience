library(dplyr)
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
install.packages("dplyr")
library(dplyr)
library(filter)
install.packages("nycflights13")
library(nycflights13)
dim(flights)
head(flights)
flight$time_hour
flights$time_hour
head(flights$time_hour)
filter(flights, month == 1, day == 1)
?filter
library(dplyr)
flights %>% filter(month == 1, day == 1) %>% ggplot(mapping = aes(x=carrier)) + geom_bar()
library(ggplot2)
flights %>% filter(month == 1, day == 1) %>% ggplot(mapping = aes(x=carrier)) + geom_bar()
head(flights)
flights$distance %>% mean()
asdasd
df <- tibble(x = c(1,2,3, NA), y = c(5,6,7,NA))
df %>% arrange(x)
df <- tibble(x = c(1,2,3, NA, NA), y = c(5,6,7,8,9))
df %>% arrange(x)
df %>% arrange(desc(x)
)
diamonds
diamonds %>% select(carat,price)
diamonds %>% select(price,carat)
save.image()
btcdata <- read.csv('https://raw.githubusercontent.com/minihat/Crypto-trade-bot/master/BTC_price_history.csv")
)
''
'
btcdata <- read.csv("https://raw.githubusercontent.com/minihat/Crypto-trade-bot/master/BTC_price_history.csv")
btcdatasmall <- btcdata(1:10)
install.packages("crypto")
library(crypto)
crypto2xts(df, seconds)
crypto2xts(df, second)
crypto2xts(df, sec)
crypto_xts(df, sec)
crypto_xts(df, 'min')
crypto_xts(df, 'minute')
crypto_xts(df, "minute")
crypto2xts(df, "minute")
crypto_xts(df, "minute")
getCoins()
df <- getCoins()
df
df <- crypto_history()
crypto_xts(df, 'sec')
date <- getCoins()
date <- crypto_history()
library(tibble)
library(tidyverse)
date <- crypto_history()
crypto_xts(df, 'sec')
crypto_xts(date, 'sec')
date
head(date)
as.xts(date)
str(date)
View(date)
ETHdata <- filter(date,symbol = "ETH")
ETHdata <- filter(date,symbol == "ETH")
View(ETHdata)
ggplot(data=ETHdata, mapping = aes(x = date,y = open)) + geom_point()
ggplot(data=ETHdata, mapping = aes(x = date,y = open)) + geom_line()
ggplot(data=ETHdata, mapping = aes(x = date,y = open)) + geom_density()
ggplot(data=ETHdata, mapping = aes(x = date,y = open)) + geom_point()
ggplot(data=ETHdata, mapping = aes(x = date,y = open)) + geom_hist()
ggplot(data=ETHdata, mapping = aes(x = date,y = open)) + geom_area()
ggplot(data=ETHdata, mapping = aes(x = date(:),y = open)) + geom_area()
ggplot(data=ETHdata, mapping = aes(x = date,y = open)) + geom_area()
prices <- getPrices()
prices <- crypto_prices()
prices
head(prices)
ETHprice <- filter(prices,symbol == "ETH")
ETHprice
View(ETHprice)
ETHprice <- crypto_prices(coin = "Ethereum")
?select
?mutate
?filter
?summarise
?arrange
arrange(date, slug)
arrange(ETHprice, open)
?arrange
arrange(df, x)
arrange(df,y)
arrange(df,desc(y)
)
arrange(ETHprice, open)
arrange(ETHprice, high)
ETHprice
arrange(date, open)
head(arrange(date,open))
temp <- filter(date, open > 20)
temp <- filter(date, open > .20)
temp <- filter(date, open > 20)
temp <- filter(date, open > .20)
temp <- filter(date, open > 2000)
temp <- filter(date, open > 20000)
temp
rm(btcdata,prices)
rm(temp,df)
ETHdata
head(ETHprice)
head(ETHdata)
arrange(data,date)
arrange(data,"date")
getwd()
setwd("~/GitHub/DataScience")
as.matrix(c(1,2,3,4))
as.matrix(c(1,2,3,4),2,2)
as.matrix(2,2c(1,2,3,4))
as.matrix(2,2,c(1,2,3,4))
as.matrix(c(1,2,3,4))
as.matrix(c(1,2,3,4),c(5,6,7,8))
?as.matrix
as.matrix(c(1,2,3,4),nrow = 2
)
as.matrix(c(1,2,3,4),nrow = 2,ncol = 2)
as.matrix(c(1,2,3,4),nrow = 2,ncol = 2,byrow = false)
matrix(c(1,2,3,4),nrow = 2)
my_matrix <- matrix(c(1,2,3,4,5,6,7,8,9,10,11,12),byrow = TRUE, nrow = 3)
my_matrix
matrix(c(1,2,3,4,5,6,7,8,9,10,11,12),byrow = FALSE, nrow = 3)
matrix(c(1,2,3,4,5,6,7,8,9,10,11,12),byrow = TRUE, nrow = 3)
matrix(c(1,2,3,4,5,6,7,8,9,10,11,12),byrow = TRUE, nrow = 4)
as.data.frame(my_matrix)
?as.data.frame
my_matrix <- matrix(c(1,2,3,4,5,6,7,8,9,10,11,12),byrow = FALSE, nrow = 3)
my_matrix2 <- matrix(c(1,2,3,4,5,6,7,8,9,10,11,12),byrow = TRUE, nrow = 4)
colnames <- c("one","two","three")
as.data.frame(my_matrix2,col.names = colnames)
as.data.frame(my_matrix2,col.names = colnames)
my_dataframe <- as.data.frame(my_matrix2,col.names = colnames)
my_dataframe
colname
colnames
my_dataframe <- as.data.frame(my_matrix2,row.names = colnames)
my_dataframe
diamonds
ggplot(data = diamonds, mapping = aes(x = cuts)) + geom_bar()
ggplot(data = diamonds, mapping = aes(x = cut)) + geom_bar()
ggplot(data = diamonds) + geom_bar(mapping = aes(x = cut))
ggplot(data = diamonds) + geom_bar(mapping = aes(x = clarity))
ggplot(data = diamonds) + geom_hist(mapping = aes(x = depth))
ggplot(data = diamonds) + geom_histogram(mapping = aes(x = depth))
ggplot(data = diamonds) + geom_histogram(mapping = aes(x = depth),binwidth = 10)
ggplot(data = diamonds) + geom_histogram(mapping = aes(x = depth),binwidth = 1)
ggplot(data = diamonds) + geom_histogram(mapping = aes(x = depth),binwidth = .5)
?geom_histogram
ggplot(data = diamonds) + geom_histogram(mapping = aes(x = depth),binwidth = .5,xmin = 50)
ggplot(data = diamonds) + geom_histogram(mapping = aes(x = depth),binwidth = .5,xlim = (50,75))
ggplot(data = diamonds) + geom_histogram(mapping = aes(x = depth),binwidth = .5,xlim(50,75))
ggplot(data = diamonds) + geom_histogram(mapping = aes(x = depth),binwidth = .5,xlim = 50)
ggplot(data = diamonds) + geom_histogram(mapping = aes(x = depth),binwidth = .5) + xlim(50,75)
#Question 6b
ggplot(data = diamonds) + geom_histogram(mapping = aes(x = depth),binwidth = .5) + xlim(55,70)
ggplot(data = diamonds) + geom_histogram(mapping = aes(x = depth),binwidth = .5) + xlim(50,70)
ggplot(data = diamonds) + geom_histogram(mapping = aes(x = depth),binwidth = .5) + xlim(50,75)
#Question 6b
ggplot(data = diamonds) + geom_histogram(mapping = aes(x = depth),binwidth = .5)
rm(colnames,my_dataframe,my_matrix,my_matrix2)
head(ETHdata)
head(ETHdata)
head(ETHdata)
head(ETHdata)
head(ETHdata)
?mutate
?remove
rm(ETHdata$slug)
Ethdata$slug <- NULL
ETHdata$slug <- NULL
Ethdata
ETHdata
head(ETHdata)
ETHdata$symbol,ETHdata$name <- NULL
ETHdata$symbol <- NULL
ETHdata$name <- NULL
head(ETHdata)
ETHdaa$ranknow <- NULL
ETHdata$ranknow <- NULL
ETHdata
head(ETHdata)
?crypto_prices
by_continent <- group_by(gapminder,continent)
library(gapminder)
by_continent <- group_by(gapminder,continent)
by_continent
head(by_continent)
summarise(gapminder, mean_le - mean(lifeExp))
summarise(gapminder, mean_le = mean(lifeExp))
summarise(by_continent, mean_le - mean(lifeExp))
summarise(by_continent, mean_le = mean(lifeExp))
gapminder2 <- gapminder
head(gapminder)
head(by_continent)
?setwd
list.files
list.files()
dir.create("BitCoinProject")
setwd("~/GitHub/DataScience/BitCoinProject")
